shiny::runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
library('rsconnect')
library(rsconnect)
rsconnect::setAccountInfo(name='midilibre',
token='FCE5315773A6653B21A2789DACAF77AF',
secret='<SECRET>')
install.packages('rsconnect')
install.packages("rsconnect")
library(rsconnect)
rsconnect::setAccountInfo(name='midilibre',
token='FCE5315773A6653B21A2789DACAF77AF',
secret='<SECRET>')
library(rsconnect)
rsconnect::deployApp('C:\Users\elmen\OneDrive\Documents\github\marathon\histogramme')
library(rsconnect)
rsconnect::deployApp('C:/Users/elmen/OneDrive/Documents/github/marathon/histogramme')
dep1 <- read.csv2('C:/Users/elmen/OneDrive/Documents/github/marathon/Code_donnees_diag_circulairePresidentielle_Tour_1_dept_clean.csv')
dep1
dep1 <- read.csv2('C:/Users/elmen/OneDrive/Documents/github/marathon/Code_donnees_diag_circulaire/Presidentielle_Tour_1_dept_clean.csv')
dep1
#HERAULT
heraut<- dep1%>%
filter(Libellé.du.département=="Hérault")
library(ggiraph)
library(ggplot2)
library(fpp3)
#HERAULT
heraut<- dep1%>%
filter(Libellé.du.département=="Hérault")
######################
mycols <- c("#CE1719", "#057C85", "#FFCB05", "#127DB3", "#0E4D7C", "#E62154", "#034EA1", "#051237", "#2ABAFF", "#DE313D", "#C0081F")
heraut$tooltip <- c(paste0("Nom = ", heraut$Nom, ", Voix = ", heraut$Voix))
#heraut$tooltip
my_gg<- ggplot(data = heraut, aes(x="",y=Voix, fill=Nom,tooltip=heraut$tooltip)) +
geom_bar_interactive(width=1, stat="identity") +
coord_polar("y", start=0)+
scale_fill_manual(values = mycols) +
theme_void()
#Css de l'infobulle
ggiraph(code = print(my_gg), tooltip_extra_css = "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;",
tooltip_opacity = 1)
shiny::runApp('marathon WEB/histo')
ggiraph(code = print(my_gg), tooltip_extra_css = "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;",
tooltip_opacity = 1)
runApp('github/marathon/histogramme')
runApp()
runApp('github/marathon/histogramme')
runApp()
runApp('github/marathon/histogramme')
runApp()
runApp('github/marathon/histogramme')
runApp('github/marathon/histogramme')
runApp('github/marathon/histogramme')
runApp()
runApp('github/marathon/histogramme')
runApp('github/marathon/histogramme')
heraut<- dep1%>%filter(Libelle=="Herault")
mycols <- c("#CE1719", "#057C85", "#FFCB05", "#127DB3", "#0E4D7C", "#E62154", "#034EA1", "#051237", "#2ABAFF", "#DE313D", "#C0081F")
heraut$tooltip <- c(paste0("Nom = ", heraut$Nom, ", Voix = ", heraut$Voix))
my_gg<- ggplot(data = heraut, aes(x="",y=Voix, fill=Nom,tooltip=heraut$tooltip)) +
geom_bar_interactive(width=1, stat="identity") +
coord_polar("y", start=0)+
scale_fill_manual(values = mycols) +
theme_void()
ggiraph(code = print(my_gg), tooltip_extra_css = "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;",
tooltip_opacity = 1)
heraut$tooltip <- c(paste0("Nom = ", heraut$Nom, ", Voix = ", heraut$Voix))
my_gg<- ggplot(data = heraut, aes(x="",y=Voix, fill=Nom,tooltip=tooltip)) +
geom_bar_interactive(width=1, stat="identity") +
coord_polar("y", start=0)+
scale_fill_manual(values = mycols) +
theme_void()
ggiraph(code = print(my_gg), tooltip_extra_css = "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;",
tooltip_opacity = 1)
runApp('marathon WEB/histo')
runApp('github/marathon/histogramme')
runApp('marathon WEB/histo')
runApp('github/marathon/histogramme')
runApp('github/marathon/histogramme')
runApp('github/marathon/histogramme')
heraut <- reactive({
dep1%>%filter(Libelle=="Herault")
})
mycols <- c("#CE1719", "#057C85", "#FFCB05", "#127DB3", "#0E4D7C", "#E62154", "#034EA1", "#051237", "#2ABAFF", "#DE313D", "#C0081F")
heraut()$tooltip <- c(paste0("Nom = ", heraut()$Nom, ", Voix = ", heraut()$Voix))
my_gg<- ggplot(data = heraut(), aes(x="",y=Voix, fill=Nom,tooltip=tooltip)) +
geom_bar_interactive(width=1, stat="identity") +
coord_polar("y", start=0)+
scale_fill_manual(values = mycols) +
theme_void()
ggiraph(code = print(my_gg), tooltip_extra_css = "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;",
tooltip_opacity = 1)
heraut <- dep1%>%filter(Libelle=="Herault"
heraut <- dep1%>%filter(Libelle=="Herault")
heraut <-
dep1%>%filter(Libelle=="Herault")
dep1 <- read.csv2('C:/Users/elmen/OneDrive/Documents/github/marathon/Code_donnees_diag_circulaire/Presidentielle_Tour_1_dept_clean.csv')
heraut <-
dep1%>%filter(Libelle=="Herault")
heraut
mycols <- c("#CE1719", "#057C85", "#FFCB05", "#127DB3", "#0E4D7C", "#E62154", "#034EA1", "#051237", "#2ABAFF", "#DE313D", "#C0081F")
heraut$tooltip <- c(paste0("Nom = ", heraut$Nom, ", Voix = ", heraut$Voix))
my_gg<- ggplot(data = heraut, aes(x="",y=Voix, fill=Nom,tooltip=tooltip)) +
geom_bar_interactive(width=1, stat="identity") +
coord_polar("y", start=0)+
scale_fill_manual(values = mycols) +
theme_void()
ggiraph(code = print(my_gg), tooltip_extra_css = "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;",
tooltip_opacity = 1)
runApp('github/marathon/histogramme')
runApp('marathon WEB/test')
runApp('marathon WEB/histo')
runApp('github/marathon/histogramme')
runApp('github/marathon/histogramme')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
my_gg<- ggplot(data = heraut, aes(x="",y=Voix, fill=Nom,tooltip=heraut$tooltip)) +
geom_bar_interactive(width=1, stat="identity") +
coord_polar("y", start=0)+
scale_fill_manual(values = mycols) +
theme_void()
my_gg
ggiraph(code = print(my_gg), tooltip_extra_css = "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;",
tooltip_opacity = 1)
runApp('marathon WEB/histo')
girafe(ggobj = scatter)
heraut$tooltip <- c(paste0("Nom = ", heraut$Nom, ", Voix = ", heraut$Voix))
my_gg<- ggplot(data = heraut, aes(x="",y=Voix, fill=Nom,tooltip=tooltip)) +
geom_bar_interactive(width=1, stat="identity") +
coord_polar("y", start=0)+
scale_fill_manual(values = mycols) +
theme_void()
scatter=ggiraph(code = print(my_gg), tooltip_extra_css = "background-color:gray;color:white;font-style:italic;padding:10px;border-radius:10px 20px 10px 20px;",
tooltip_opacity = 1)
girafe(ggobj = scatter)
runApp('github/marathon/histogramme')
girafe(ggobj = scatter, width = 0.7)
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo')
runApp('github/marathon/histogramme')
runApp('github/marathon/histogramme')
runApp('marathon WEB/histo')
runApp('marathon WEB/histo_simple')
runApp('marathon WEB/histo_simple')
runApp('marathon WEB/histo_simple')
runApp('marathon WEB/histo_simple')
runApp('marathon WEB/histo_simple')
runApp('marathon WEB/histo_simple')
runApp('marathon WEB/histo_simple')
runApp('marathon WEB/nv_histo')
runApp('marathon WEB/histo_simple')
runApp('marathon WEB/histo_simple')
runApp('marathon WEB/histo_simple')
runApp('marathon WEB/histo_simple')
runApp('marathon WEB/histo_simple')
runApp('marathon WEB/histo_simple')
library(shinyWidgets)
library(shinythemes)
library(data.table)
library(tidyverse)
library(stringr)
library(stringi)
library(ggplot2)
library(plotly)
theme_set(
theme_void()
)
library(shinyWidgets)
library(shinythemes)
library(data.table)
library(tidyverse)
library(stringr)
library(stringi)
library(ggplot2)
library(plotly)
theme_set(
theme_void()
)
#carte
couleurs_T1=c("#0E4D7C", "#051237", "#2ABAFF","#DE313D")
couleurs_T2=c( "#051237", "#2ABAFF")
carte <- map_data("france")
d=d[,c(1,2,3,6,8,11,14,18,20,24,26,30,32,36,38,42,44,48,50,54,56,60,62,66,68,72,74,78,80)]
d=d[,c(1,2,3,6,8,11,14,18,20,24,26,30,32,36,38,42,44,48,50,54,56,60,62,66,68,72,74,78,80)]
d=read.csv2("C:/Users/celia/Documents/MIASHS/M1/Marathon du web/Marathon git/marathon/Donnees/Données utilisées/Presidentielle_Tour_1_dept.csv", header=T)
d=read.csv2("C:/Users/elmen/OneDrive/Documents/marathon/Presidentielle_Tour_1_dept.csv", header=T)
setDT(d)
d=d[,c(1,2,3,6,8,11,14,18,20,24,26,30,32,36,38,42,44,48,50,54,56,60,62,66,68,72,74,78,80)]
names(d)=c("code","dep","inscrits","votants","blanc","nul","exprimes","nom1","voix1",
"nom2","voix2",
"nom3","voix3",
"nom4","voix4",
"nom5","voix5",
"nom6","voix6",
"nom7","voix7",
"nom8","voix8",
"nom9","voix9",
"nom10","voix10",
"nom11","voix11")
d[,region:=iconv(dep,to="ASCII//TRANSLIT")]
d[,region:=gsub("'","",region)][,region:=str_to_lower(region)]
setDT(carte)
carte[,region:=str_to_lower(region)]
carte_T1 <- left_join(d, carte, by = "region")
g=ggplot(carte_T1, aes(long, lat, group = group))+
geom_polygon(aes(fill = nom1 ), color = "white")+
scale_fill_manual(values = couleurs_T1)+ labs(fill = "CANDIDAT") +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
) +
ggtitle("Résultats du premier tour par département")
ggplotly(g)
d2=read.csv2("C:/Users/elmen/OneDrive/Documents/marathon/Presidentielle_Tour_2_dept.csv", header=T)
setDT(d2)
d2=d2[,c(1,2,3,6,8,11,14,18,20,24,26)]
names(d2)=c("code","dep","inscrits","votants","blanc","nul","exprimes","nom1","voix1","nom2","voix2")
d2[voix1>voix2,gagnant:=nom1][voix1<voix2,gagnant:=nom2][voix1==voix2,gagnant:="EGALITE"]
d2[,region:=iconv(dep,to="ASCII//TRANSLIT")]
d2[,region:=gsub("'","",region)][,region:=str_to_lower(region)]
carte_T2 <- left_join(d2, carte, by = "region")
g2=ggplot(carte_T2, aes(long, lat, group = group))+
geom_polygon(aes(fill = gagnant ), color = "white")+
scale_fill_manual(values = couleurs_T2)+ labs(fill = "CANDIDAT") +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
) +
ggtitle("Résultats du second tour par département")
ggplotly(g2)
# departement
deps=read.csv("C:/Users/elmen/OneDrive/Documents/marathon/departement2021.csv", encoding = "UTF-8")
regions=read.csv("C:/Users/elmen/OneDrive/Documents/marathon/region2021.csv", encoding = "UTF-8")
region_c=left_join(regions,deps, by = "REG")
setDT(region_c)
regions=region_c[,c(1,7,6,12)]
names(regions)=c("num_region","num_dep","nom_region","nom_dep")
#regions[,region:=iconv(nom_dep,to="ASCII//TRANSLIT//IGNORE")]
regions[,region:=gsub("'","",nom_dep)][,region:=str_to_lower(region)][,region:=gsub("é","e",region)][,region:=gsub("è","e",region)][,region:=gsub("ô","o",region)][,region:=gsub("î","i",region)]
# Define server logic required to draw a histogram
shinyServer(function(input, output) {
output$distPlot <- renderPlotly({
ggplotly(ggplot(data=df, aes(x=ville, y=vote, fill=candidat)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
scale_fill_manual(values=c("#051237", "#2ABAFF")))
})
output$Diagr <- renderggiraph({
ggiraph(code = print(my_gg), selection_type = "multiple")
})
})
d4=d
d4 <- left_join(regions,d4, by = "region")
carte_T4 <- left_join(d4, carte, by = "region")
carte_T4=carte_T4[nom_region=="Occitanie"]
g4=ggplot(carte_T4, aes(long, lat, group = group))+
geom_polygon(aes(fill = nom1 ), color = "white")+
scale_fill_manual(values =  couleurs_T1)+ labs(fill = "CANDIDAT") +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
) +
ggtitle("Résultats du premier tour par département en Occitanie")
ggplotly(g4)
runApp('marathon WEB/histo_simple')
runApp()
runApp('marathon WEB/histo_simple')
runApp('marathon WEB/histo_simple')
runApp()
runApp('marathon WEB/histo_simple')
setDT(region_c)
setDT(region_c)
setDT(d2)
ggplot(carte_T4, aes(long, lat, group = group))+
geom_polygon(aes(fill = nom1 ), color = "white")+
scale_fill_manual(values =  couleurs_T1)+ labs(fill = "CANDIDAT") +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
ggplot(carte_T4, aes(long, lat, group = group))+
geom_polygon(aes(fill = nom1 ), color = "white")+
scale_fill_manual(values =  couleurs_T1)+ labs(fill = "CANDIDAT") +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
carte_T4 <- left_join(d4, carte, by = "region")
carte_T4=carte_T4[nom_region=="Occitanie"]
g4=ggplot(carte_T4, aes(long, lat, group = group))+
geom_polygon(aes(fill = nom1 ), color = "white")+
scale_fill_manual(values =  couleurs_T1)+ labs(fill = "CANDIDAT") +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
) +
ggtitle("Résultats du premier tour par département en Occitanie")
ggplot(carte_T4, aes(long, lat, group = group))+
geom_polygon(aes(fill = nom1 ), color = "white")+
scale_fill_manual(values =  couleurs_T1)+ labs(fill = "CANDIDAT") +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
ggplotly(g2)
ggplotly(g2)
ggplot(carte_T4, aes(long, lat, group = group))+
geom_polygon(aes(fill = nom1 ), color = "white")+
scale_fill_manual(values =  couleurs_T1)+ labs(fill = "CANDIDAT") +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
ggplot(carte_T4, aes(long, lat, group = group))+
geom_polygon(aes(fill = nom1 ), color = "white")+
scale_fill_manual(values =  couleurs_T1)+ labs(fill = "CANDIDAT") +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
ggplot(carte_T4, aes(long, lat, group = group))+
geom_polygon(aes(fill = nom1 ), color = "white")+
scale_fill_manual(values =  couleurs_T1)+ labs(fill = "CANDIDAT") +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
) +
ggtitle("Résultats du premier tour par département en Occitanie")
ggplotly(ggplot(carte_T4, aes(long, lat, group = group))+
geom_polygon(aes(fill = nom1 ), color = "white")+
scale_fill_manual(values =  couleurs_T1)+ labs(fill = "CANDIDAT") +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
) +
ggtitle("Résultats du premier tour par département en Occitanie"))
runApp('marathon WEB/histo_simple')
runApp()
runApp('marathon WEB/histo_simple')
runApp('marathon WEB/histo_simple')
?reactive
shiny::runApp('marathon WEB/histo_carte')
runApp()
runApp('marathon WEB/histo_carte')
runApp('marathon WEB/histo_carte')
runApp('marathon WEB/histo_carte')
runApp()
runApp('marathon WEB/histo_carte')
regions[,region:=gsub("'","",nom_dep)][,region:=str_to_lower(region)][,region:=gsub("é","e",region)][,region:=gsub("è","e",region)][,region:=gsub("ô","o",region)][,region:=gsub("î","i",region)]
d4=d
d4 <- left_join(regions,d4, by = "region")
carte_T4 <- left_join(d4, carte, by = "region")
carte_T4=carte_T4[nom_region=="Occitanie"]
g4=ggplot(carte_T4, aes(long, lat, group = group))+
geom_polygon(aes(fill = nom1 ), color = "white")+
scale_fill_manual(values =  couleurs_T1)+ labs(fill = "CANDIDAT") +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
) +
ggtitle("Résultats du premier tour par département en Occitanie")
ggplotly(g4)
regions[,region:=gsub("'","",nom_dep)][,region:=str_to_lower(region)][,region:=gsub("é","e",region)][,region:=gsub("è","e",region)][,region:=gsub("ô","o",region)][,region:=gsub("î","i",region)]
d4=d
d4 <- left_join(regions,d4, by = "region")
carte_T4 <- left_join(d4, carte, by = "region")
carte_T4=carte_T4[nom_region=="Occitanie"]
g4=ggplot(carte_T4, aes(long, lat, group = group))+
geom_polygon(aes(fill = nom1 ), color = "white")+
scale_fill_manual(values =  couleurs_T1)+ labs(fill = "CANDIDAT") +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
) +
ggtitle("Résultats du premier tour par département en Occitanie")
ggplotly(g4)
runApp('marathon WEB/histo_carte')
runApp()
runApp('marathon WEB/histo_carte')
shiny::runApp('marathon WEB/hist_nn')
region_c
regions
d
runApp('marathon WEB/hist_nn')
runApp('marathon WEB/hist_nn')
names(regions)=c("num_region","num_dep","nom_region","nom_dep")
regions=region_c[,c(1,7,3,11)]
names(regions)=c("num_region","num_dep","nom_region","nom_dep")
regions
regions=region_c[,c(1,7,4,11)]
names(regions)=c("num_region","num_dep","nom_region","nom_dep")
regions
deps=read.csv("C:/Users/elmen/OneDrive/Documents/marathon/departement2021.csv", encoding = "UTF-8")
regions=read.csv("C:/Users/elmen/OneDrive/Documents/marathon/region2021.csv", encoding = "UTF-8")
region_c=left_join(regions,deps, by = "REG")
setDT(region_c)
deps=read.csv("C:/Users/elmen/OneDrive/Documents/marathon/departement2021.csv", encoding = "UTF-8")
regions=read.csv("C:/Users/elmen/OneDrive/Documents/marathon/region2021.csv", encoding = "UTF-8")
region_c=left_join(regions,deps, by = "REG")
runApp('marathon WEB/hist_nn')
couleurs_T1=c("#0E4D7C", "#051237", "#2ABAFF","#DE313D")
couleurs_T2=c( "#051237", "#2ABAFF")
carte <- map_data("france")
d=read.csv2("C:/Users/elmen/OneDrive/Documents/marathon/Presidentielle_Tour_1_dept.csv", header=T)
setDT(d)
d=d[,c(1,2,3,6,8,11,14,18,20,24,26,30,32,36,38,42,44,48,50,54,56,60,62,66,68,72,74,78,80)]
names(d)=c("code","dep","inscrits","votants","blanc","nul","exprimes","nom1","voix1",
"nom2","voix2",
"nom3","voix3",
"nom4","voix4",
"nom5","voix5",
"nom6","voix6",
"nom7","voix7",
"nom8","voix8",
"nom9","voix9",
"nom10","voix10",
"nom11","voix11")
deps=read.csv("C:/Users/elmen/OneDrive/Documents/marathon/departement2021.csv", encoding = "UTF-8")
regions=read.csv("C:/Users/elmen/OneDrive/Documents/marathon/region2021.csv", encoding = "UTF-8")
region_c=left_join(regions,deps, by = "REG")
deps=read.csv("C:/Users/elmen/OneDrive/Documents/marathon/departement2021.csv", encoding = "UTF-8")
regions=read.csv("C:/Users/elmen/OneDrive/Documents/marathon/region2021.csv", encoding = "UTF-8")
region_c=left_join(regions,deps, by = "REG")
shiny::runApp('marathon WEB/hist_nn')
deps=read.csv("C:/Users/elmen/OneDrive/Documents/marathon/departement2021.csv", encoding = "UTF-8")
regions=read.csv("C:/Users/elmen/OneDrive/Documents/marathon/region2021.csv", encoding = "UTF-8")
region_c=left_join(regions,deps, by = "REG")
region_c=left_join(regions,deps)
region_c=left_join(regions,deps, by = "REG")
region_c=left_join(regions,deps, by = "REG")
deps=read.csv("C:/Users/elmen/OneDrive/Documents/marathon/departement2021.csv", encoding = "UTF-8")
regions=read.csv("C:/Users/elmen/OneDrive/Documents/marathon/region2021.csv", encoding = "UTF-8")
region_c=left_join(regions,deps, by = "REG")
deps=read.csv("C:/Users/elmen/OneDrive/Documents/marathon/departement2021.csv", encoding = "UTF-8")
regions=read.csv("C:/Users/elmen/OneDrive/Documents/marathon/region2021.csv", encoding = "UTF-8")
region_c=left_join(regions,deps, by = "REG")
deps=read.csv("C:/Users/elmen/OneDrive/Documents/marathon/departement2021.csv", encoding = "UTF-8")
regions=read.csv("C:/Users/elmen/OneDrive/Documents/marathon/region2021.csv", encoding = "UTF-8")
region_c=left_join(regions,deps, by = "REG")
deps=read.csv("C:/Users/elmen/OneDrive/Documents/marathon/departement2021.csv", encoding = "UTF-8")
regions=read.csv("C:/Users/elmen/OneDrive/Documents/marathon/region2021.csv", encoding = "UTF-8")
region_c=left_join(regions,deps, by = "REG")
shiny::runApp('marathon WEB/histo_carte')
runApp('marathon WEB/test')
library(shiny)
library(shinydashboard)
runApp('marathon WEB/ancien_dash')
runApp()
runApp('marathon WEB/ancien_dash')
runApp('marathon WEB/dash_1')
runApp('marathon WEB/dash_1')
runApp('marathon WEB/dash_1')
runApp('marathon WEB/dash_1')
runApp('marathon WEB/ancien_dash')
runApp('marathon WEB/dash_1')
runApp('marathon WEB/dash_1')
