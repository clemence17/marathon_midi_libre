panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
) +
ggtitle(paste("Pourcentages de votes pour" ,candidat_titre, "au le premier tour"))+ labs(fill = "Votes en fonction \ndu nombre de votes \npar département")
#colors = RColorBrewer::brewer.pal(n = 9, name = "Blues"),
ggplotly(g7)
candidat_titre="E. Macron"
candidat_couleur=couleurs_T1[3]
d21=d2
d21[,votes_exp:=round((voix1/votants)*100,1)]
d21 <- left_join(regions,d21, by = "region")
carte_T10 <- left_join(d21, carte, by = "region")
setDT(carte_T10)
carte_T10=carte_T10[nom_region=="Occitanie"]
carte_T10=carte_T10[nom_region=="Occitanie",]
g10=ggplot(carte_T10, aes(long, lat, group = group))+
geom_polygon(aes(fill = votes_exp), color = "white")+
scale_fill_gradient(low="#ECEEF0", high=candidat_couleur)+
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
) +
ggtitle(paste("Pourcentages de votes pour" ,candidat_titre, "au deuxième tour"))+ labs(fill = "Votes en fonction \ndu nombre de votes \npar département")
ggplotly(g10)
candidat="LE PEN"
candidat_titre="M. Le Pen"
candidat_couleur=couleurs_T1[2]
d6=d4
#d7=d6[nom1==candidat,votes_exp:=voix1/exprimes]
#d8=d6[nom2==candidat,votes_exp:=voix2/exprimes]
#d9=d6[nom3==candidat,votes_exp:=voix3/exprimes]
#d10=d6[nom4==candidat,votes_exp:=voix4/exprimes]
#d11=d6[nom5==candidat,votes_exp:=voix5/exprimes]
#d12=d6[nom7==candidat,votes_exp:=voix7/exprimes]
#d13=d6[nom8==candidat,votes_exp:=voix8/exprimes]
#d14=d6[nom9==candidat,votes_exp:=voix9/exprimes]
#d15=d6[nom10==candidat,votes_exp:=voix10/exprimes]
#d16=d6[nom11==candidat,votes_exp:=voix11/exprimes]
d7=d6[nom1==candidat,votes_exp:=voix1/votants]
d8=d6[nom2==candidat,votes_exp:=voix2/votants]
d9=d6[nom3==candidat,votes_exp:=voix3/votants]
d10=d6[nom4==candidat,votes_exp:=voix4/votants]
d11=d6[nom5==candidat,votes_exp:=voix5/votants]
d12=d6[nom7==candidat,votes_exp:=voix7/votants]
d13=d6[nom8==candidat,votes_exp:=voix8/votants]
d14=d6[nom9==candidat,votes_exp:=voix9/votants]
d15=d6[nom10==candidat,votes_exp:=voix10/votants]
d16=d6[nom11==candidat,votes_exp:=voix11/votants]
d18=rbind(d7,d8)
d18=rbind(d18,d9)
d18=rbind(d18,d10)
d18=rbind(d18,d11)
d18=rbind(d18,d12)
d18=rbind(d18,d13)
d18=rbind(d18,d14)
d18=rbind(d18,d15)
d18=rbind(d18,d16)
d18=unique(d18[!is.na(votes_exp),.(nom_region,nom_dep,region,votes_exp)])
d18[,votes_exp:=round(votes_exp*100,1) ]
carte_T7 <- left_join(d18, carte, by = "region")
carte_T7=carte_T7[nom_region=="Occitanie",]
g7=ggplot(carte_T7, aes(long, lat, group = group))+
geom_polygon(aes(fill = votes_exp), color = "white")+
scale_fill_gradient(low="#ECEEF0", high=candidat_couleur)+
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
) +
ggtitle(paste("Pourcentages de votes pour" ,candidat_titre, "au le premier tour"))+ labs(fill = "Votes en fonction \ndu nombre de votes \npar département")
ggplotly(g7)
candidat_titre="M. Le Pen"
candidat_couleur=couleurs_T1[2]
d22=d2
d22[,votes_exp:=round((voix2/votants)*100,1)]
d22 <- left_join(regions,d22, by = "region")
carte_T11 <- left_join(d22, carte, by = "region")
setDT(carte_T11)
carte_T10=carte_T11[nom_region=="Occitanie"]
carte_T11=carte_T11[nom_region=="Occitanie",]
g11=ggplot(carte_T11, aes(long, lat, group = group))+
geom_polygon(aes(fill = votes_exp), color = "white")+
scale_fill_gradient(low="#ECEEF0", high=candidat_couleur)+
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
) +
ggtitle(paste("Pourcentages de votes pour" ,candidat_titre, "au deuxième tour"))+ labs(fill = "Votes en fonction \ndu nombre de votes \npar département en %")
ggplotly(g11)
d19=d4
carte_T8 <- left_join(d19, carte, by = "region")
setDT(carte_T8)
carte_T8[, abstention:=round(((inscrits-votants)/inscrits)*100,1)]
carte_T8=carte_T8[nom_region=="Occitanie",]
g8=ggplot(carte_T8, aes(long, lat, group = group))+
geom_polygon(aes(fill = abstention), color = "white")+
scale_fill_gradient(low="#ECEEF0", high="#E61D23", limits=c(15,25))+
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
) +
ggtitle(paste("Abstention premier tour"))+ labs(fill = "Asbtention par rapport au nombre d'inscrits en %")
ggplotly(g8)
d23=d2
d23 <- left_join(regions,d23, by = "region")
carte_T12 <- left_join(d23, carte, by = "region")
setDT(carte_T12)
carte_T12[, abstention:=round(((inscrits-votants)/inscrits*100),1)]
carte_T12=carte_T12[nom_region=="Occitanie",]
g12=ggplot(carte_T12, aes(long, lat, group = group))+
geom_polygon(aes(fill = abstention), color = "white")+
scale_fill_gradient(low="#ECEEF0", high="#E61D23", limits=c(15,25))+
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
) +
ggtitle(paste("Abstention second tour"))+ labs(fill = "Asbtention par rapport au nombre d'inscrits en %")
ggplotly(g12)
d20=d4
carte_T9 <- left_join(d19, carte, by = "region")
setDT(carte_T9)
carte_T9[, vb:=round((blanc/inscrits)*100,1)]
carte_T9=carte_T9[nom_region=="Occitanie",]
g9=ggplot(carte_T9, aes(long, lat, group = group))+
geom_polygon(aes(fill = vb), color = "white")+
scale_fill_gradient(low="#ECEEF0", high="#E6B52E", limits=c(1,8.7))+
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
) +
ggtitle(paste("Votes blancs"))+ labs(fill = "Votes blancs par rapport au nombre d'inscrits en %")
ggplotly(g9)
d24=d2
d24 <- left_join(regions,d24, by = "region")
carte_T13 <- left_join(d24, carte, by = "region")
setDT(carte_T13)
carte_T13[, vb:=round((blanc/inscrits)*100,1)]
carte_T13=carte_T13[nom_region=="Occitanie",]
g13=ggplot(carte_T13, aes(long, lat, group = group))+
geom_polygon(aes(fill = vb), color = "white")+
scale_fill_gradient(low="white", high="#E6B52E", limits=c(1,8.7))+
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
) +
ggtitle(paste("Votes blancs"))+ labs(fill = "Votes blancs par rapport\nau nombre d'inscrits en %")
ggplotly(g13)
villes=read.csv2("C:/Users/celia/Documents/MIASHS/M1/Marathon du web/Marathon git/marathon/Donnees/Données utilisées/Presidentielle_2017_Resultats_Tour_2_cantons.csv")
setDT(villes)
villes=villes[,c(1,2,4,5,6,8,10,13,16,23,30)]
names(villes)=c("code_dep","nom_dep","canton","inscrits","abstention","votants","blancs","nuls","exprimes","MACRON","LE PEN")
villes2=villes
villes=melt(villes,
id.vars=c("code_dep","nom_dep","canton","inscrits","abstention","votants","blancs","nuls","exprimes"),
variable.names("candidat"),
value.name = c("voix")
)
names(villes)=c("code_dep","nom_dep","canton","inscrits","abstention","votants","blancs","nuls","exprimes","candidat","voix")
theme_set(
theme_grey()
)
ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),stat="identity",position=position_dodge())+
coord_flip() +theme_void() + scale_fill_manual(values=couleurs_T2v2)+ labs(fill = "% de voix par candidat")
ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),stat="identity",position=position_dodge())+
coord_flip()  + scale_fill_manual(values=couleurs_T2v2)+ labs(fill = "% de voix par candidat")
villes[,canton:=gsub("-","",canton)][,canton:=gsub("[1234567890]","",canton)]
villes=villes[canton %in% c("Toulouse", "Montpellier","Béziers", "Nîmes","Perpignan"),]
villes=villes[,.(voix=sum(voix),
votants=sum(votants),
inscrits=sum(inscrits),
abstention=sum(abstention),
blancs=sum(blancs),
nuls=sum(nuls),
exprimes=sum(exprimes)),by=.(canton,candidat)]
villes[,voix_votants:=round((voix/votants)*100,1)][,blancs_votants:=round((voix/votants)*100,1)][,abstention_votants:=round((voix/votants)*100,1)]
theme_set(
theme_grey()
)
ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),stat="identity",position=position_dodge())+
coord_flip()  + scale_fill_manual(values=couleurs_T2v2)+ labs(fill = "% de voix par candidat")
ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),stat="identity",position=position_dodge())+
coord_flip()  + scale_fill_manual(values=couleurs_T2v2)+ labs(fill = "Candidat") + xlab("")+ylab("% de voix par candidat")+ggtitle("% de voix par candidat du second pour les 5 villes les plus importantes d'Occitanie")
ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),stat="identity",position=position_dodge())+
coord_flip()  + scale_fill_manual(values=couleurs_T2v2)+ labs(fill = "Candidat") + xlab("")+ylab("% de voix par candidat")+ggtitle("% de voix par candidat du second pour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=9))
ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),stat="identity",position=position_dodge())+
coord_flip()  + scale_fill_manual(values=couleurs_T2v2)+ labs(fill = "Candidat") + xlab("")+ylab("% de voix par candidat")+ggtitle("% de voix par candidat du second pour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=9,colour = "black"))
ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),stat="identity",position=position_dodge())+
coord_flip()  + scale_fill_manual(values=couleurs_T2v2)+ labs(fill = "Candidat") + xlab("")+ylab("% de voix par candidat")+ggtitle("% de voix par candidat du second pour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=9,colour = "#000000"))
ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),stat="identity",position=position_dodge())+
coord_flip()  + scale_fill_manual(values=couleurs_T2v2)+ labs(fill = "Candidat") + xlab("")+ylab("% de voix par candidat")+ggtitle("% de voix par candidat du second pour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=12,colour = "#000000"))
ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),stat="identity",position=position_dodge())+
coord_flip()  + scale_fill_manual(values=couleurs_T2v2)+ labs(fill = "Candidat") + xlab("")+ylab("% de voix par candidat")+ggtitle("% de voix par candidat du second pour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=20,colour = "#000000"))
ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),stat="identity",position=position_dodge())+
coord_flip()  + scale_fill_manual(values=couleurs_T2v2)+ labs(fill = "Candidat") + xlab("")+ylab("% de voix par candidat")+ggtitle("% de voix par candidat du second pour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=12,colour = "#000000"))
ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),stat="identity",position=position_dodge())+
coord_flip()  + scale_fill_manual(values=couleurs_T2v2)+ labs(fill = "Candidat") + xlab("")+ylab("% de voix par candidat")+ggtitle("% de voix par candidat du second pour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.y= element_text(size=12,colour = "#000000"))
ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),stat="identity",position=position_dodge())+
coord_flip()  + scale_fill_manual(values=couleurs_T2v2)+ labs(fill = "Candidat") + xlab("")+ylab("% de voix par candidat")+ggtitle("% de voix par candidat du second pour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.y= element_text(size=12,colour = "#000000"),axis.line.y = element_line(colour = "#000000",
size = 1, linetype = "solid"))
size = 1, linetype = "solid"))+geom_text(aes(y=voix_votants,fill=candidat)
ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),stat="identity",position=position_dodge())+
coord_flip()  + scale_fill_manual(values=couleurs_T2v2)+ labs(fill = "Candidat") + xlab("")+ylab("% de voix par candidat")+ggtitle("% de voix par candidat du second pour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.y= element_text(size=12,colour = "#000000"),axis.line.y = element_line(colour = "#000000",
size = 1, linetype = "solid"))+geom_text(aes(y=voix_votants,fill=candidat))
ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),stat="identity",position=position_dodge())+
coord_flip()  + scale_fill_manual(values=couleurs_T2v2)+ labs(fill = "Candidat") + xlab("")+ylab("% de voix par candidat")+ggtitle("% de voix par candidat du second pour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.y= element_text(size=12,colour = "#000000"),axis.line.y = element_line(colour = "#000000",
size = 1, linetype = "solid"))+geom_text(aes(x = canton,y=voix_votants,fill=candidat))
ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),stat="identity",position=position_dodge())+
coord_flip()  + scale_fill_manual(values=couleurs_T2v2)+ labs(fill = "Candidat") + xlab("")+ylab("% de voix par candidat")+ggtitle("% de voix par candidat du second pour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.y= element_text(size=12,colour = "#000000"),axis.line.y = element_line(colour = "#000000",
size = 1, linetype = "solid"))+geom_text(aes(x = canton,y=voix_votants,fill=candidat, label=voix_votants))
ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),stat="identity",position=position_dodge())+
coord_flip()  + scale_fill_manual(values=couleurs_T2v2)+ labs(fill = "Candidat") + xlab("")+ylab("% de voix par candidat")+ggtitle("% de voix par candidat du second pour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.y= element_text(size=12,colour = "#000000"),axis.line.y = element_line(colour = "#000000",
size = 1, linetype = "solid"))+geom_text(aes(x = canton,y=voix_votants,fill=candidat, label=voix_votants),vjust=0)
ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),stat="identity",position=position_dodge())+
scale_fill_manual(values=couleurs_T2v2)+
labs(fill = "Candidat") + xlab("")+
ylab("% de voix par candidat")+
ggtitle("% de voix par candidat du second pour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=12,colour = "#000000"))
ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),stat="identity",position=position_dodge())+
scale_fill_manual(values=couleurs_T2v2)+
labs(fill = "Candidat") + xlab("")+
ylab("% de voix par candidat")+
ggtitle("Pourcentage de voix par candidat du second\npour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=12,colour = "#000000"))
ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),stat="identity",position=position_dodge())+
scale_fill_manual(values=couleurs_T2v2)+
labs(fill = "Candidat") + xlab("")+
ylab("% de voix par candidat")+
ggtitle("Pourcentage de voix par candidat du second\npour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=12,colour = "#000000"))+
theme_grey()
villes
villes[,blancs_votants:=round((blancs/votants)*100,1)]
g15=ggplot(villes)+
geom_bar(aes(x = canton, y=blancs_votants,fill=candidat),stat="identity",position=position_dodge())+
scale_fill_manual(values="#E6B52E")+
labs(fill = "Candidat") + xlab("")+
ylab("% de voix par candidat")+
ggtitle("Pourcentage de votes blancs du second\npour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=12,colour = "#000000"))+
theme_grey()
g15
ggplot(villes)+
geom_bar(aes(x = canton, y=blancs_votants,fill=candidat),stat="identity",position=position_dodge())+
scale_fill_manual(values="#E6B52E")+
labs(fill = "Candidat") + xlab("")+
ylab("% de voix par candidat")+
ggtitle("Pourcentage de votes blancs du second\npour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=12,colour = "#000000"))+
theme_grey()
g15=ggplot(villes)+
geom_bar(aes(x = canton, y=blancs_votants),stat="identity",position=position_dodge())+
scale_fill_manual(values="#E6B52E")+
labs(fill = "Candidat") + xlab("")+
ylab("% de voix par candidat")+
ggtitle("Pourcentage de votes blancs du second\npour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=12,colour = "#000000"))+
theme_grey()
g15
g15=ggplot(villes)+
geom_bar(aes(x = canton, y=blancs_votants),color="#E6B52E",stat="identity",position=position_dodge())+
labs(fill = "Candidat") + xlab("")+
ylab("% de voix par candidat")+
ggtitle("Pourcentage de votes blancs du second\npour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=12,colour = "#000000"))+
theme_grey()
g15
g15=ggplot(villes)+
geom_bar(aes(x = canton, y=blancs_votants),fill="#E6B52E",stat="identity",position=position_dodge())+
labs(fill = "Candidat") + xlab("")+
ylab("% de voix par candidat")+
ggtitle("Pourcentage de votes blancs du second\npour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=12,colour = "#000000"))+
theme_grey()
g15
g15=ggplot(villes)+
geom_bar(aes(x = canton, y=abstention_votants),fill="#E61D23",stat="identity",position=position_dodge())+
labs(fill = "Candidat") + xlab("")+
ylab("% de voix par candidat")+
ggtitle("Pourcentage d'e votes blancs d'abstention du second\npour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=12,colour = "#000000"))+
theme_grey()
g15
g15=ggplot(villes)+
geom_bar(aes(x = canton, y=abstention_votants),fill="#E61D23",stat="identity",position=position_dodge())+
labs(fill = "Candidat") + xlab("")+
ylab("% de voix par candidat")+
ggtitle("Pourcentage d'd'abstention du second\npour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=12,colour = "#000000"))+
theme_grey()
g15
,"Béziers"
g15=ggplot(villes)+
geom_bar(aes(x = canton, y=abstention_votants),fill="#E61D23",stat="identity",position=position_dodge())+
labs(fill = "Candidat") + xlab("")+
ylab("% de voix par candidat")+
ggtitle("Pourcentage d'd'abstention du second\npour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=12,colour = "#000000"))+
theme_grey()+ scale_x_discrete(limits=c("Toulouse", "Montpellier", "Nîmes","Perpignan","Béziers"))
g15
theme_grey()+ scale_x_discrete(limits=c("Toulouse", "Montpellier", "Nîmes","Perpignan","Béziers")
g15
villes[,blancs_votants:=round((blancs/votants)*100,1)]
g15=ggplot(villes)+
geom_bar(aes(x = canton, y=blancs_votants),fill="#E6B52E",stat="identity",position=position_dodge())+
labs(fill = "Candidat") + xlab("")+
ylab("% de voix par candidat")+
ggtitle("Pourcentage de votes blancs du second\npour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=12,colour = "#000000"))+
theme_grey()+ scale_x_discrete(limits=c("Toulouse", "Montpellier", "Nîmes","Perpignan","Béziers"))
g15
villes[,canton:=gsub("-","",canton)][,canton:=gsub("[1234567890]","",canton)]
villes=villes[canton %in% c("Toulouse", "Montpellier","Béziers", "Nîmes","Perpignan"),]
villes=villes[,.(voix=sum(voix),
votants=sum(votants),
inscrits=sum(inscrits),
abstention=sum(abstention),
blancs=sum(blancs),
nuls=sum(nuls),
exprimes=sum(exprimes)),by=.(canton,candidat)]
villes[,voix_votants:=round((voix/votants)*100,1)][,blancs_votants:=round((voix/votants)*100,1)][,abstention_votants:=round((voix/votants)*100,1)]
g14=ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),stat="identity",position=position_dodge())+
scale_fill_manual(values=couleurs_T2v2)+
labs(fill = "Candidat") + xlab("")+
ylab("% de voix par candidat")+
ggtitle("Pourcentage de voix par candidat du second\npour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=12,colour = "#000000"))+
theme_grey()+ scale_x_discrete(limits=c("Toulouse", "Montpellier", "Nîmes","Perpignan","Béziers"))
g14
g14=ggplot(villes)+
geom_bar(aes(x = canton, y=voix_votants,fill=candidat),color=couleurs_T2[1],stat="identity",position=position_dodge())+
scale_fill_manual(values=couleurs_T2v2)+
labs(fill = "Candidat") + xlab("")+
ylab("% de voix par candidat")+
ggtitle("Pourcentage de voix par candidat du second\npour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=12,colour = "#000000"))+
theme_grey()+ scale_x_discrete(limits=c("Toulouse", "Montpellier", "Nîmes","Perpignan","Béziers"))
g14
shiny::runApp('MIASHS/M1/Marathon du web/V1')
runApp()
runApp('MIASHS/M1/Marathon du web/V1')
runApp()
runApp()
runApp('MIASHS/M1/Marathon du web/V1')
runApp('MIASHS/M1/Marathon du web/V1')
g=ggplot(carte_T1, aes(long, lat, group = group))+
geom_polygon(aes(fill = nom1 ), color = "white")+
scale_fill_manual(values = couleurs_T1)+ labs(fill = "CANDIDAT") +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
) +
ggtitle("Résultats du premier tour par département") + theme_void()
carte <- map_data("france")
d=read.csv2("C:/Users/celia/Documents/MIASHS/M1/Marathon du web/Marathon git/marathon/Donnees/Données utilisées/Presidentielle_Tour_1_dept.csv", header=T)
setDT(d)
d=d[,c(1,2,3,6,8,11,14,18,20,24,26,30,32,36,38,42,44,48,50,54,56,60,62,66,68,72,74,78,80)]
names(d)=c("code","dep","inscrits","votants","blanc","nul","exprimes","nom1","voix1",
"nom2","voix2",
"nom3","voix3",
"nom4","voix4",
"nom5","voix5",
"nom6","voix6",
"nom7","voix7",
"nom8","voix8",
"nom9","voix9",
"nom10","voix10",
"nom11","voix11")
d[,region:=iconv(dep,to="ASCII//TRANSLIT")]
d[,region:=gsub("'","",region)][,region:=str_to_lower(region)]
#//////////////////////////////////////////////////////////////////////////
setDT(carte)
carte[,region:=str_to_lower(region)]
carte_T1 <- left_join(d, carte, by = "region")
g=ggplot(carte_T1, aes(long, lat, group = group))+
geom_polygon(aes(fill = nom1 ), color = "white")+
scale_fill_manual(values = couleurs_T1)+ labs(fill = "CANDIDAT") +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
) +
ggtitle("Résultats du premier tour par département")
ggplotly(g)
carte <- map_data("france")
d=read.csv2("C:/Users/celia/Documents/MIASHS/M1/Marathon du web/Marathon git/marathon/Donnees/Données utilisées/Presidentielle_Tour_1_dept.csv", header=T)
setDT(d)
d=d[,c(1,2,3,6,8,11,14,18,20,24,26,30,32,36,38,42,44,48,50,54,56,60,62,66,68,72,74,78,80)]
names(d)=c("code","dep","inscrits","votants","blanc","nul","exprimes","nom1","voix1",
"nom2","voix2",
"nom3","voix3",
"nom4","voix4",
"nom5","voix5",
"nom6","voix6",
"nom7","voix7",
"nom8","voix8",
"nom9","voix9",
"nom10","voix10",
"nom11","voix11")
d[,region:=iconv(dep,to="ASCII//TRANSLIT")]
d[,region:=gsub("'","",region)][,region:=str_to_lower(region)]
#//////////////////////////////////////////////////////////////////////////
setDT(carte)
carte[,region:=str_to_lower(region)]
carte_T1 <- left_join(d, carte, by = "region")
g=ggplot(carte_T1, aes(long, lat, group = group))+
geom_polygon(aes(fill = nom1 ), color = "white")+
scale_fill_manual(values = couleurs_T1)+ labs(fill = "CANDIDAT") +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
) +
ggtitle("Résultats du premier tour par département")
ggplotly(g)
carte <- map_data("france")
d=read.csv2("C:/Users/celia/Documents/MIASHS/M1/Marathon du web/Marathon git/marathon/Donnees/Données utilisées/Presidentielle_Tour_1_dept.csv", header=T)
setDT(d)
d=d[,c(1,2,3,6,8,11,14,18,20,24,26,30,32,36,38,42,44,48,50,54,56,60,62,66,68,72,74,78,80)]
names(d)=c("code","dep","inscrits","votants","blanc","nul","exprimes","nom1","voix1",
"nom2","voix2",
"nom3","voix3",
"nom4","voix4",
"nom5","voix5",
"nom6","voix6",
"nom7","voix7",
"nom8","voix8",
"nom9","voix9",
"nom10","voix10",
"nom11","voix11")
d[,region:=iconv(dep,to="ASCII//TRANSLIT")]
d[,region:=gsub("'","",region)][,region:=str_to_lower(region)]
#//////////////////////////////////////////////////////////////////////////
setDT(carte)
carte[,region:=str_to_lower(region)]
carte_T1 <- left_join(d, carte, by = "region")
g=ggplot(carte_T1, aes(long, lat, group = group))+
geom_polygon(aes(fill = nom1 ), color = "white")+
scale_fill_manual(values = couleurs_T1)+ labs(fill = "CANDIDAT") +
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Modifier le trait des axes
axis.line = element_blank()
) +
ggtitle("Résultats du premier tour par département")
ggplotly(g)
shiny::runApp('MIASHS/M1/Marathon du web/versionlapin')
runApp('MIASHS/M1/Marathon du web/versionlapin')
runApp('MIASHS/M1/Marathon du web/C/versionsoleil')
runApp('MIASHS/M1/Marathon du web/versionlapin')
runApp('MIASHS/M1/Marathon du web/versionlapin - Copie')
runApp('MIASHS/M1/Marathon du web/versionlapin - Copie')
runApp('MIASHS/M1/Marathon du web/versionlapin - Copie')
runApp('MIASHS/M1/Marathon du web/versionlapin - Copie')
runApp('MIASHS/M1/Marathon du web/versionlapin - Copie - Copie')
carte_dep
runApp('MIASHS/M1/Marathon du web/versionlapin - Copie - Copie')
g15=ggplot(carte_cant)+
geom_bar(aes(x = canton, y=blancs_inscrits),fill="#E6B52E",stat="identity",position=position_dodge(),width =0.6)+
labs(fill = "Candidat") + xlab("")+
ylab("% de voix par candidat")+
ggtitle("Taux de votes blancs du second tour\npour les 5 villes les plus importantes d'Occitanie")+theme(axis.text.x= element_text(size=17,colour = "#000000"))+
theme_grey()+ scale_x_discrete(limits=c("Toulouse", "Montpellier", "Nimes","Perpignan","Beziers")) + coord_flip()+ggtitle("Taux de votes blancs\npour les plus grandes villes\nd'Occitanie")
runApp('MIASHS/M1/Marathon du web/versionlapin - Copie - Copie')
runApp('MIASHS/M1/Marathon du web/versionlapin - Copie - Copie')
runApp('MIASHS/M1/Marathon du web/versionlapin - Copie - Copie')
g12=ggplot(carte_cant)+
geom_bar(aes(x = canton, y=abstention_inscrits),fill=abstention,stat="identity",position=position_dodge(),width =0.6)+
labs(fill = "Candidat") + xlab("")+
theme(axis.text.x= element_text(size=17,colour = "#000000"))+
theme_grey()+ scale_x_discrete(limits=c("Toulouse", "Montpellier", "Nimes","Perpignan","Beziers"))+ coord_flip() +ggtitle("Taux d'abstention pour\nles plus grandes villes")+ ylab(fill = "Asbtention \npar rapport au nombre \nd'inscrits en %")
runApp('MIASHS/M1/Marathon du web/versionlapin - Copie - Copie')
runApp()
runApp('MIASHS/M1/Marathon du web/versionlapin - Copie - Copie')
runApp('MIASHS/M1/Marathon du web/versionlapin - Copie - Copie')
runApp('MIASHS/M1/Marathon du web/versionlapin - Copie - Copie')
